AWSTemplateFormatVersion: 2010-09-09
Description: Part 3 - Add Prometheus monitoring with CloudFormation

Parameters:
  ImageId:
    Type: String
    Default: "ami-0c02fb55956c7d316"
    Description: "ID de la imagen AMI para la instancia EC2"
    AllowedValues:
      - "ami-0c02fb55956c7d316" # Amazon Linux 2
      - "ami-0d8f6eb4f641ef691" # Ubuntu Server 20.04 LTS
      - "ami-0a91cd140a1fc148a" # Red Hat Enterprise Linux 8
    ConstraintDescription: "Debe ser una de las AMIs permitidas: Amazon Linux 2, Ubuntu Server 20.04 LTS o Red Hat Enterprise Linux 8."

Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC_CF

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MyIG_CF

  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [0, !GetAZs ]
      Tags:
        - Key: "Name"
          Value: "MyPublicSubnet_CF"

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: "Name"
          Value: "MyPublicRouteTable_CF"

  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTable

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access via port 80
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: MySecurityGroup_CF
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "80"
          ToPort: "80"
          CidrIp: "0.0.0.0/0"
        - IpProtocol: tcp
          FromPort: "22"
          ToPort: "22"
          CidrIp: "0.0.0.0/0"
        - IpProtocol: tcp
          FromPort: "9100"
          ToPort: "9100"
          CidrIp: "0.0.0.0/0"

  EC2Prometheus:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      InstanceType: t2.micro
      KeyName: "vockey"
      SecurityGroupIds:
        - !Ref SecurityGroup
      SubnetId: !Ref PublicSubnet
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo yum update -y
          cd /tmp
          wget https://github.com/prometheus/node_exporter/releases/download/v1.6.1/node_exporter-1.6.1.linux-amd64.tar.gz
          tar xvfz node_exporter-1.6.1.linux-amd64.tar.gz
          sudo mv node_exporter-1.6.1.linux-amd64/node_exporter /usr/local/bin/
          sudo useradd --no-create-home --shell /sbin/nologin nodeusr
          cat <<EOF | sudo tee /etc/systemd/system/node_exporter.service
          [Unit]
          Description=Node Exporter
          After=network.target
          
          [Service]
          User=nodeusr
          ExecStart=/usr/local/bin/node_exporter
          
          [Install]
          WantedBy=multi-user.target
          EOF
          sudo chown nodeusr:nodeusr /usr/local/bin/node_exporter
          sudo systemctl daemon-reload
          sudo systemctl start node_exporter
          sudo systemctl enable node_exporter
          echo "Node Exporter estÃ¡ corriendo y escuchando en el puerto 9100"
      Tags:
        - Key: Name
          Value: MyEC2Prometheus_CF
  

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref MyVPC
    Export:
      Name: !Sub ${AWS::StackName}-VPC

  PublicSubnet:
    Description: A reference to the created public subnet
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnet

  SecurityGroup:
    Description: A reference to the created security group
    Value: !Ref SecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-SecurityGroup
  
  InstanceId:
    Description: The instance ID of the created EC2 instance
    Value: !Ref EC2Prometheus
    Export:
      Name: !Sub ${AWS::StackName}-InstanceId
